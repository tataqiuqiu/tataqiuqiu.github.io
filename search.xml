<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue 动态组件</title>
      <link href="/2022/06/27/vue%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6/"/>
      <url>/2022/06/27/vue%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="1、常用的引用组件方式"><a href="#1、常用的引用组件方式" class="headerlink" title="1、常用的引用组件方式"></a>1、常用的引用组件方式</h3><p><a href="https://tataqiuqiu.github.io/demos/vue/test/dist/#/app-component-2">例子链接</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ButtonCounter</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">ButtonCounter</span> <span class="keyword">from</span> <span class="string">&quot;./ButtonCounter.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">    <span class="title class_">ButtonCounter</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、考虑如下场景"><a href="#2、考虑如下场景" class="headerlink" title="2、考虑如下场景"></a>2、考虑如下场景</h3><p><a href="https://tataqiuqiu.github.io/demos/vue/test/dist/#/app-component">例子链接</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;CreateButtomCounter&quot;</span>&gt;</span>点击加载组件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateButtomCounter</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./CreateButtomCounter.js&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title class_">CreateButtomCounter</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CreateButtomCounter.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ButtonCounter</span> <span class="keyword">from</span> <span class="string">&quot;./ButtonCounter.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">CreateButtomCounter</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title class_">ButtonCounterCom</span> = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(<span class="title class_">ButtonCounter</span>)</span><br><span class="line">  <span class="keyword">const</span> instance = <span class="keyword">new</span> <span class="title class_">ButtonCounterCom</span>().$mount()  </span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> dom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#root&quot;</span>)</span><br><span class="line">  dom.<span class="title function_">appendChild</span>(instance.<span class="property">$el</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、Vue-extend"><a href="#3、Vue-extend" class="headerlink" title="3、Vue.extend()"></a>3、Vue.extend()</h3><p><a href="https://cn.vuejs.org/v2/api/index.html#Vue-extend">官方文档</a><br><img src="/images/vue-extend.png"></p><p>特点：只能通过自身初始化结构<br>使用范围：<br>（1）挂载在某元素下<br>（2）被vue实例的components引用<br>（3）Vue.component组件引用</p><h3 id="4、Vue-component"><a href="#4、Vue-component" class="headerlink" title="4、Vue.component()"></a>4、Vue.component()</h3><p><a href="https://cn.vuejs.org/v2/api/index.html#Vue-component">官方文档</a><br><img src="/images/vue-component.png"></p><p>特点：<br>（1）可通过自身初始化组件结构<br>（2）可通过引入vue.extend初始化组件结构<br>（3）可通过第三方模版temple.html初始化组件结构<br>使用范围： 任何已被vue初始化的元素内 <a href="https://cn.vuejs.org/v2/guide/components.html">官方文档</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="comment">//方法3 第三方模板引入</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;templecomponent&#x27;</span>, <span class="keyword">function</span>(<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">  $.<span class="title function_">get</span>(<span class="string">&quot;./../xtemplate/com.html&quot;</span>).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">res</span>) &#123;</span><br><span class="line">    <span class="title function_">resolve</span>(&#123;</span><br><span class="line">      <span class="attr">template</span>: res,</span><br><span class="line">      <span class="attr">props</span>: [<span class="string">&quot;b&quot;</span>],</span><br><span class="line">      <span class="attr">data</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          <span class="attr">a</span>: <span class="string">&quot;a&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="5、new-Vue"><a href="#5、new-Vue" class="headerlink" title="5、new Vue"></a>5、new Vue</h3><p>特点：<br>（1）可以通过自身components引用vue.extend构造，通过自身data向构造传参<br>（2）可以通过自身component引用组件模版，通过自身data向组件传参<br>使用范围：<br>（1）仅限于自身</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt1</span>&gt;</span><span class="tag">&lt;/<span class="name">dt1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">vueapple</span> <span class="attr">v-bind:b</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">vueapple</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/x-template&quot;</span> id=<span class="string">&quot;dt1&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>这里是子组件1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line"><span class="attr">el</span>: <span class="string">&quot;#app1&quot;</span>,</span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line"><span class="attr">msg</span>: <span class="string">&quot;vue实例参数&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">components</span>: &#123;</span><br><span class="line"><span class="attr">dt1</span>: &#123;</span><br><span class="line"><span class="attr">template</span>: <span class="string">&quot;#dt1&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">vueapple</span>: <span class="title class_">Profile</span> <span class="comment">//【引入构造】</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="6、Vue-component-与-Vue-extend-关系"><a href="#6、Vue-component-与-Vue-extend-关系" class="headerlink" title="6、Vue.component() 与 Vue.extend() 关系"></a>6、Vue.component() 与 Vue.extend() 关系</h3><p>调用 Vue.component 时<br>1、调用 Vue.extend，即使用基础 Vue 构造器，创建一个“子类”。<br>2、注册全局组件 <a href="https://cn.vuejs.org/v2/guide/components.html">官方文档</a></p><p>如果是 new Vue 之后调用 Vue.component 呢？<br>以下代码等价</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">CreateButtomCounter</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title class_">ButtonCounterCom</span> = <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;button-counter&#x27;</span>, <span class="title class_">ButtonCounter</span>)</span><br><span class="line">  <span class="keyword">const</span> instance = <span class="keyword">new</span> <span class="title class_">ButtonCounterCom</span>().$mount()  </span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> dom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#root&quot;</span>)</span><br><span class="line">  dom.<span class="title function_">appendChild</span>(instance.<span class="property">$el</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">CreateButtomCounter</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title class_">ButtonCounterCom</span> = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(<span class="title class_">ButtonCounter</span>)</span><br><span class="line">  <span class="keyword">const</span> instance = <span class="keyword">new</span> <span class="title class_">ButtonCounterCom</span>().$mount()  </span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> dom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#root&quot;</span>)</span><br><span class="line">  dom.<span class="title function_">appendChild</span>(instance.<span class="property">$el</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7、常用的引用组件方式-与-Vue-extend-的关系"><a href="#7、常用的引用组件方式-与-Vue-extend-的关系" class="headerlink" title="7、常用的引用组件方式 与 Vue.extend() 的关系"></a>7、常用的引用组件方式 与 Vue.extend() 的关系</h3><h3 id="8、-mount"><a href="#8、-mount" class="headerlink" title="8、$mount()"></a>8、$mount()</h3><p>$mount 方法支持传入 2 个参数，第一个是 el，它表示挂载的元素，可以是字符串，也可以是 DOM 对象，如果是字符串在浏览器环境下会调用 query 方法转换成 DOM 对象的。第二个参数是和服务端渲染相关，在浏览器环境下不需要传第二个参数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> instance = <span class="keyword">new</span> <span class="title class_">ButtonCounterCom</span>().$mount()  </span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#root&quot;</span>)</span><br><span class="line">dom.<span class="title function_">appendChild</span>(instance.<span class="property">$el</span>)</span><br></pre></td></tr></table></figure><p>$mount()不带参数，会把组件在内存中渲染完毕<br>instance.$el 拿到的就是组件对应的dom元素,可以直接操作dom</p><h3 id="9、经典案例"><a href="#9、经典案例" class="headerlink" title="9、经典案例"></a>9、经典案例</h3><p>Vue.extend + $mount<br><a href="https://element.eleme.io/#/zh-CN/component/dialog">Dialog</a></p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
          <category> vue </category>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sass常用方法</title>
      <link href="/2019/09/20/sass%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2019/09/20/sass%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="一、控制指令"><a href="#一、控制指令" class="headerlink" title="一、控制指令:"></a>一、控制指令:</h2><h3 id="1、-for-循环"><a href="#1、-for-循环" class="headerlink" title="1、@for 循环"></a>1、@for 循环</h3><p>@for $var from &lt;start&gt; through &lt;end&gt;</p><p>@for $var from &lt;start&gt; to &lt;end&gt;</p><p>当使用 through 时，条件范围包含 &lt;start&gt; 与 &lt;end&gt; 的值，而使用 to 时条件范围只包含 &lt;start&gt; 的值不包含 &lt;end&gt; 的值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@for</span> $i from <span class="number">1</span> through <span class="number">3</span> &#123;</span><br><span class="line">  <span class="selector-class">.item-</span>#&#123;$<span class="selector-tag">i</span>&#125; &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(($i * <span class="number">30</span>) * <span class="number">1deg</span>);</span><br><span class="line">    <span class="attribute">animation</span>: load <span class="number">1.2s</span> linear (($i - <span class="number">1</span>) / <span class="number">10</span>) * <span class="number">1s</span> infinite;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>编译后</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">30deg</span>);</span><br><span class="line">  <span class="attribute">animation</span>: load <span class="number">1.2s</span> linear <span class="number">0s</span> infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-2</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">60deg</span>);</span><br><span class="line">  <span class="attribute">animation</span>: load <span class="number">1.2s</span> linear <span class="number">0.1s</span> infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-3</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>);</span><br><span class="line">  <span class="attribute">animation</span>: load <span class="number">1.2s</span> linear <span class="number">0.2s</span> infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
          <category> sass </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开放封闭原则：1、装饰者模式</title>
      <link href="/2019/09/20/%E5%BC%80%E6%94%BE%E5%B0%81%E9%97%AD%E5%8E%9F%E5%88%99%EF%BC%9A1%E3%80%81%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
      <url>/2019/09/20/%E5%BC%80%E6%94%BE%E5%B0%81%E9%97%AD%E5%8E%9F%E5%88%99%EF%BC%9A1%E3%80%81%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="1、通用方法"><a href="#1、通用方法" class="headerlink" title="1、通用方法"></a>1、通用方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">before</span> = <span class="keyword">function</span>(<span class="params"> beforefn </span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> _self = <span class="variable language_">this</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    beforefn.<span class="title function_">apply</span>( <span class="variable language_">this</span>, <span class="variable language_">arguments</span> )</span><br><span class="line">    <span class="keyword">return</span> _self.<span class="title function_">apply</span>( <span class="variable language_">this</span>, <span class="variable language_">arguments</span> )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">after</span> = <span class="keyword">function</span>(<span class="params"> afterfn </span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> _self = <span class="variable language_">this</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> ret = _self.<span class="title function_">apply</span>( <span class="variable language_">this</span>, <span class="variable language_">arguments</span> )</span><br><span class="line">    afterfn.<span class="title function_">apply</span>( <span class="variable language_">this</span>, <span class="variable language_">arguments</span> )</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>不污染写法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> before = <span class="keyword">function</span> (<span class="params"> fn, beforefn </span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    beforefn.<span class="title function_">apply</span>( <span class="variable language_">this</span>, <span class="variable language_">arguments</span> )</span><br><span class="line">    <span class="keyword">return</span> fn.<span class="title function_">apply</span>( <span class="variable language_">this</span>, <span class="variable language_">arguments</span> )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> a = <span class="title function_">before</span>(</span><br><span class="line">  <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="title function_">alert</span>(<span class="number">3</span>)&#125;,</span><br><span class="line">  <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="title function_">alert</span>(<span class="number">2</span>)&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">a = <span class="title function_">before</span>(a, <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="title function_">alert</span>(<span class="number">1</span>)&#125;)</span><br><span class="line"><span class="title function_">a</span>()</span><br></pre></td></tr></table></figure><h2 id="2、例子：数据统计上报"><a href="#2、例子：数据统计上报" class="headerlink" title="2、例子：数据统计上报"></a>2、例子：数据统计上报</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">showLogin</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">&#x27;打开登录浮层&#x27;</span> )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">log</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">`上报标签为：<span class="subst">$&#123;<span class="variable language_">this</span>.getAttribute( <span class="string">&#x27;tag&#x27;</span> )&#125;</span>`</span> )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">showLogin = showLogin.<span class="title function_">after</span>( log )</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>( <span class="string">&#x27;button&#x27;</span> ).<span class="property">onclick</span> = shoLogin</span><br></pre></td></tr></table></figure><h2 id="3、例子：用-AOP-动态改变函数的参数"><a href="#3、例子：用-AOP-动态改变函数的参数" class="headerlink" title="3、例子：用 AOP 动态改变函数的参数"></a>3、例子：用 AOP 动态改变函数的参数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">func</span> = param =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>( param )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func = func.<span class="title function_">before</span>(<span class="function"><span class="params">param</span> =&gt;</span> &#123;</span><br><span class="line">  param.<span class="property">b</span> = <span class="string">&#x27;b&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">func</span>( &#123;<span class="attr">a</span>: <span class="string">&#x27;a&#x27;</span>&#125; ) <span class="comment">// 输出：&#123;a: &#x27;a&#x27;, b: &#x27;b&#x27;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="4、例子：插件式的表单验证"><a href="#4、例子：插件式的表单验证" class="headerlink" title="4、例子：插件式的表单验证"></a>4、例子：插件式的表单验证</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">before</span> = <span class="keyword">function</span>(<span class="params"> beforefn </span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> _self = <span class="variable language_">this</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ( beforefn.<span class="title function_">apply</span>( <span class="variable language_">this</span>, <span class="variable language_">arguments</span> ) === <span class="literal">false</span> ) &#123;</span><br><span class="line">      <span class="comment">// beforefn 返回 false 的情况直接 return , 不再执行后面的原函数</span></span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _self.<span class="title function_">apply</span>( <span class="variable language_">this</span>, <span class="variable language_">arguments</span> )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">validata</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> ( username.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span> ) &#123;</span><br><span class="line">    alert ( <span class="string">&#x27;用户名不能为空&#x27;</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( password.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span> ) &#123;</span><br><span class="line">    alert ( <span class="string">&#x27;密码不能为空&#x27;</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">formSubmit</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> param = &#123;</span><br><span class="line">    <span class="attr">username</span>: username.<span class="property">value</span>,</span><br><span class="line">    <span class="attr">password</span>: password.<span class="property">value</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">ajax</span>( <span class="string">&#x27;http://xxx.com/login&#x27;</span>, param )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">formSubmit = formSubmit.<span class="title function_">before</span>( validata )</span><br><span class="line"></span><br><span class="line">submitBtn.<span class="property">onclick</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">fromSubmit</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、注意"><a href="#5、注意" class="headerlink" title="5、注意"></a>5、注意</h2><p>被装饰过的函数，返回的实际上是一个新的函数，如果在原函数上保存了一些属性，那么这些属性会丢失。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">func</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="title function_">alert</span>( <span class="number">1</span> )</span><br><span class="line">&#125;</span><br><span class="line">func.<span class="property">a</span> = <span class="string">&#x27;a&#x27;</span></span><br><span class="line"></span><br><span class="line">func = func.<span class="title function_">after</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="title function_">alert</span>( <span class="number">2</span> )</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>( func.<span class="property">a</span> ) <span class="comment">// 输出：undefined</span></span><br></pre></td></tr></table></figure><h2 id="6、装饰者模式与代理模式"><a href="#6、装饰者模式与代理模式" class="headerlink" title="6、装饰者模式与代理模式"></a>6、装饰者模式与代理模式</h2><p>最重要的区别是意图和设计目的。</p><p>在虚拟代理实现预图片加载的例子中，本体负责设置 img 节点的 src，代理则提供了预加载的功能，这看起来也是“加入行为”的一种方式，但这种方式和装饰者模式的偏重点不一样。装饰者模式是实实在在的为对象增加新的职责和行为，而代理模式的事情还是跟本体一样，最终都是设置src。但代理加入了一些“聪明”的功能，比如在图片真正加载好之前，先使用一张占位的loading图片反馈给客户。</p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
          <category> 代码优化 </category>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> the Open-Close </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器渲染原理</title>
      <link href="/2019/09/19/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/"/>
      <url>/2019/09/19/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="1、现代web开发"><a href="#1、现代web开发" class="headerlink" title="1、现代web开发"></a>1、现代web开发</h3><p><img src="/images/browser/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91.jpg"></p><span id="more"></span><h3 id="2、b-s系统架构图"><a href="#2、b-s系统架构图" class="headerlink" title="2、b-s系统架构图"></a>2、b-s系统架构图</h3><p><img src="/images/browser/b-s%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E5%9B%BE.jpg"></p><h3 id="3、http协议是无状态协议"><a href="#3、http协议是无状态协议" class="headerlink" title="3、http协议是无状态协议"></a>3、http协议是无状态协议</h3><p><img src="/images/browser/http%E5%8D%8F%E8%AE%AE%E6%98%AF%E6%97%A0%E7%8A%B6%E6%80%81%E5%8D%8F%E8%AE%AE.jpg"></p><h3 id="4、TCP三次握手"><a href="#4、TCP三次握手" class="headerlink" title="4、TCP三次握手"></a>4、TCP三次握手</h3><p><img src="/images/browser/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.jpg"></p><h3 id="5、建立TCP连接"><a href="#5、建立TCP连接" class="headerlink" title="5、建立TCP连接"></a>5、建立TCP连接</h3><p><img src="/images/browser/%E5%BB%BA%E7%AB%8BTCP%E8%BF%9E%E6%8E%A5.jpg"></p><h3 id="6、dns查询过程原理"><a href="#6、dns查询过程原理" class="headerlink" title="6、dns查询过程原理"></a>6、dns查询过程原理</h3><p><img src="/images/browser/dns%E6%9F%A5%E8%AF%A2%E8%BF%87%E7%A8%8B%E5%8E%9F%E7%90%86.jpg"></p><h3 id="7、dns解析"><a href="#7、dns解析" class="headerlink" title="7、dns解析"></a>7、dns解析</h3><p><img src="/images/browser/dns%E8%A7%A3%E6%9E%90.jpg"></p><h3 id="8、完整HTTP请求过程"><a href="#8、完整HTTP请求过程" class="headerlink" title="8、完整HTTP请求过程"></a>8、完整HTTP请求过程</h3><p><img src="/images/browser/%E5%AE%8C%E6%95%B4HTTP%E8%AF%B7%E6%B1%82%E8%BF%87%E7%A8%8B.jpg"></p><h3 id="9、浏览器缓存流程"><a href="#9、浏览器缓存流程" class="headerlink" title="9、浏览器缓存流程"></a>9、浏览器缓存流程</h3><p><img src="/images/browser/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98%E6%B5%81%E7%A8%8B.jpg"></p><h3 id="10、浏览器性能优化"><a href="#10、浏览器性能优化" class="headerlink" title="10、浏览器性能优化"></a>10、浏览器性能优化</h3><p><img src="/images/browser/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 浏览器 </category>
          
          <category> 渲染原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> browser </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两行文字带省略号ellipsis</title>
      <link href="/2019/08/19/ellipsis%E4%B8%A4%E8%A1%8C%E6%96%87%E5%AD%97%E7%9A%84%E7%9C%81%E7%95%A5%E5%8F%B7/"/>
      <url>/2019/08/19/ellipsis%E4%B8%A4%E8%A1%8C%E6%96%87%E5%AD%97%E7%9A%84%E7%9C%81%E7%95%A5%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/css/ellipsis.png"></p><span id="more"></span><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lastline-space-ellipsis js-toggle-box&quot;</span> <span class="attr">title</span>=<span class="string">&quot;你让我只 fdkfjkdsjfdsj dfjdsfadf 5555555 aaaaaa 显示2行就只显示2行啊，你让我只显示2行就只显示2行啊，你让我只显示2行就只显示2行啊&quot;</span> &gt;</span></span><br><span class="line">  你让我只显示2行就只显示2行啊，你让我只显示2行就只显示2行啊，你让我只显示2行就只显示2行啊你让我只显示2行就只显示2行啊，你让我只显示2行就只显示2行啊，你让我只显示2行就只显示2行啊 </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.lastline-space-ellipsis</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">40px</span>; <span class="comment">/*用像素表示，不要用em，以免造成不同浏览器下计算出现小数点取舍不同导致1像素的差距【行高*截取行数】*/</span></span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">word-wrap</span>: break-word;</span><br><span class="line">  <span class="attribute">word-break</span>: break-all; <span class="comment">/*强制打散字符*/</span></span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>; <span class="comment">/*同背景色*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.lastline-space-ellipsis</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.lastline-space-ellipsis</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>; <span class="comment">/*实际文本颜色*/</span></span><br><span class="line">  <span class="attribute">content</span>: <span class="built_in">attr</span>(title);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.lastline-space-ellipsis</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>; <span class="comment">/*显示在最上面，展示前面的(截取行数-1)行字符*/</span></span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">20px</span>; <span class="comment">/*根据行高和截取行数调整，值为[(截取行数-1)*行高]*/</span></span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>; <span class="comment">/*同背景色*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.lastline-space-ellipsis</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  -webkit-box-orient: vertical;</span><br><span class="line">  -webkit-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  -webkit-line-clamp: <span class="number">2</span>; <span class="comment">/*截取行数*/</span></span><br><span class="line">  <span class="attribute">text-indent</span>: -<span class="number">3em</span>; <span class="comment">/*行首缩进字符数，值为[-(截取行数-1)*尾部留空字符数]，取负值把每行多padding-right的部分给缩进回去*/</span></span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">3em</span>; <span class="comment">/*尾部留空字符数*/</span></span><br><span class="line">  <span class="comment">/*margin-left: -3em;*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
          <category> ellipsis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给github上的博客添加vue-cli搭建的demo</title>
      <link href="/2019/08/05/%E7%BB%99github%E4%B8%8A%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0vue-cli%E6%90%AD%E5%BB%BA%E7%9A%84demo/"/>
      <url>/2019/08/05/%E7%BB%99github%E4%B8%8A%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0vue-cli%E6%90%AD%E5%BB%BA%E7%9A%84demo/</url>
      
        <content type="html"><![CDATA[<p>记录一下这个blog添加demo的过程</p><h2 id="一、创建一个新的github仓库。"><a href="#一、创建一个新的github仓库。" class="headerlink" title="一、创建一个新的github仓库。"></a>一、创建一个新的github仓库。</h2><h3 id="1、创建库，起名demos"><a href="#1、创建库，起名demos" class="headerlink" title="1、创建库，起名demos"></a>1、创建库，起名demos</h3><p><img src="/images/github%E6%96%B0%E5%BB%BA%E5%BA%93.png"></p><span id="more"></span><h3 id="2、打开settings"><a href="#2、打开settings" class="headerlink" title="2、打开settings"></a>2、打开settings</h3><p><img src="/images/github-settings.png"></p><h3 id="3、启用GitHub-Pages"><a href="#3、启用GitHub-Pages" class="headerlink" title="3、启用GitHub Pages"></a>3、启用GitHub Pages</h3><p><img src="/images/github%E5%BC%80%E5%90%AFpages.png"></p><h2 id="二、gitignore文件中-去掉-x2F-dist目录"><a href="#二、gitignore文件中-去掉-x2F-dist目录" class="headerlink" title="二、gitignore文件中 去掉&#x2F;dist目录"></a>二、gitignore文件中 去掉&#x2F;dist目录</h2><h2 id="三、vue-cli3-路径配置"><a href="#三、vue-cli3-路径配置" class="headerlink" title="三、vue-cli3 路径配置"></a>三、vue-cli3 路径配置</h2><h3 id="1、vue-config-js配置文件中的baseUrl改为相对路径。"><a href="#1、vue-config-js配置文件中的baseUrl改为相对路径。" class="headerlink" title="1、vue.config.js配置文件中的baseUrl改为相对路径。"></a>1、vue.config.js配置文件中的baseUrl改为相对路径。</h3><p>bulid后的文件静态资源引用就会以相对路径来引入了。<br>包括外链JS、css以及，html内的img标签。</p><p><img src="/images/vuecli3-config-baseurl.png"></p><h3 id="2、router路径更改"><a href="#2、router路径更改" class="headerlink" title="2、router路径更改"></a>2、router路径更改</h3><p>将base改为目标路径，跳转路由的位置就会以此为根目录进行跳转。</p><p><img src="/images/vuecli3-router-base.png"></p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
          <category> vue </category>
          
          <category> vue-cli </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue-cli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue父子组件双向绑定</title>
      <link href="/2019/08/05/vue%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/"/>
      <url>/2019/08/05/vue%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/</url>
      
        <content type="html"><![CDATA[<h3 id="1、sync修饰符（v2-3-0-新增）"><a href="#1、sync修饰符（v2-3-0-新增）" class="headerlink" title="1、sync修饰符（v2.3.0+ 新增）"></a>1、sync修饰符（v2.3.0+ 新增）</h3><p><a href="https://github.com/tataqiuqiu/demos/blob/master/vue/test/src/views/Bb.vue">父组件代码</a>  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span> <span class="attr">:value.sync</span>=<span class="string">&quot;doc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>father： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;doc&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>result： <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">&quot;doc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Child</span> <span class="keyword">from</span> <span class="string">&quot;@/components/Bb-child.vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Bb&quot;</span>,</span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">    <span class="title class_">Child</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">doc</span>: <span class="string">&quot;输入试试&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/tataqiuqiu/demos/blob/master/vue/test/src/components/Bb-child.vue">子组件代码</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>child： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;val&quot;</span> @<span class="attr">input</span>=<span class="string">&quot;iptInput&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Bb-child&quot;</span>,</span><br><span class="line">  <span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">value</span>: <span class="title class_">String</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">val</span>: <span class="variable language_">this</span>.<span class="property">value</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">watch</span>: &#123;</span><br><span class="line">    <span class="title function_">value</span>(<span class="params">newVal</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">val</span> = newVal;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">iptInput</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.$emit(<span class="string">&quot;update:value&quot;</span>, <span class="variable language_">this</span>.<span class="property">val</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="2、老版本"><a href="#2、老版本" class="headerlink" title="2、老版本"></a>2、老版本</h3><p><a href="https://github.com/tataqiuqiu/demos/blob/master/vue/test/src/views/Bb.2.vue">父组件代码</a>  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span> <span class="attr">:value</span>=<span class="string">&quot;doc&quot;</span> @<span class="attr">input</span>=<span class="string">&quot;oninput&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>father： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;doc&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>result： <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">&quot;doc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Child</span> <span class="keyword">from</span> <span class="string">&quot;@/components/Bb-child.2.vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Bb&quot;</span>,</span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">    <span class="title class_">Child</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">doc</span>: <span class="string">&quot;输入试试&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">oninput</span>(<span class="params">val</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">doc</span> = val;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/tataqiuqiu/demos/blob/master/vue/test/src/components/Bb-child.2.vue">子组件代码</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>child： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;val&quot;</span> @<span class="attr">input</span>=<span class="string">&quot;iptInput&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Bb-child.2&quot;</span>,</span><br><span class="line">  <span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">value</span>: <span class="title class_">String</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">val</span>: <span class="variable language_">this</span>.<span class="property">value</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">watch</span>: &#123;</span><br><span class="line">    <span class="title function_">value</span>(<span class="params">newVal</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">val</span> = newVal;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">iptInput</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.$emit(<span class="string">&quot;input&quot;</span>, <span class="variable language_">this</span>.<span class="property">val</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
          <category> vue </category>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-test-utils测试用例常用方法</title>
      <link href="/2019/08/02/vue-test-utils%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2019/08/02/vue-test-utils%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>测试用例，代码自动化监测，codereview的第一步。是个不应被忽视的环节。</p><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mount &#125; <span class="keyword">from</span> <span class="string">&#x27;@vue/test-utils&#x27;</span></span><br><span class="line"><span class="keyword">import</span> test <span class="keyword">from</span> <span class="string">&#x27;../index&#x27;</span> <span class="comment">// 引入组件</span></span><br><span class="line"><span class="keyword">const</span> wrapper = <span class="title function_">mount</span>(test, &#123;</span><br><span class="line">  <span class="comment">// 添加属性</span></span><br><span class="line">  <span class="attr">propsData</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;type_1&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 添加插片</span></span><br><span class="line">  <span class="attr">slots</span>: &#123;</span><br><span class="line">    <span class="attr">default</span>: <span class="string">&#x27;&lt;div class=&quot;test-msg&quot;&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> vm = wrapper.<span class="property">vm</span> <span class="comment">// 组件实例</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;类名是否正确&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> container = wrapper.<span class="title function_">find</span>(<span class="string">&#x27;.container&#x27;</span>)</span><br><span class="line">  <span class="title function_">expect</span>(container.<span class="title function_">contains</span>(<span class="string">&#x27;.class_1&#x27;</span>)).<span class="title function_">toBe</span>(<span class="literal">true</span>)</span><br><span class="line">  <span class="title function_">expect</span>(container.<span class="title function_">classes</span>(<span class="string">&#x27;class_2&#x27;</span>)).<span class="title function_">toBe</span>(<span class="literal">true</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;触发click事件&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  wrapper.<span class="title function_">trigger</span>(<span class="string">&#x27;click&#x27;</span>)</span><br><span class="line">  <span class="title function_">expect</span>(wrapper.<span class="title function_">emitted</span>().<span class="property">click</span>).<span class="title function_">toBeTruthy</span>()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;html内容检测&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> title = wrapper.<span class="title function_">find</span>(<span class="string">&#x27;.title&#x27;</span>)</span><br><span class="line">  <span class="title function_">expect</span>(title.<span class="title function_">text</span>()).<span class="title function_">toBe</span>(<span class="string">&#x27;标题&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> img = vm.<span class="property">$el</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.img&#x27;</span>)</span><br><span class="line">  <span class="title function_">expect</span>(img.<span class="property">src</span>).<span class="title function_">toBe</span>(<span class="string">&#x27;http://img&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;样式检测&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> vm = vm.<span class="property">$el</span></span><br><span class="line">  <span class="title function_">expect</span>(vm.<span class="property">style</span>.<span class="property">width</span>).<span class="title function_">toBe</span>(<span class="string">&#x27;300px&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;开启检测&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">expect</span>(wrapper.<span class="title function_">contains</span>(<span class="string">&#x27;.detail&#x27;</span>)).<span class="title function_">toBe</span>(<span class="literal">true</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;插片位置是否正确&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> minor = wrapper.<span class="title function_">find</span>(<span class="string">&#x27;.slot&#x27;</span>)</span><br><span class="line">  <span class="title function_">expect</span>(minor.<span class="title function_">contains</span>(<span class="string">&#x27;div.test-msg&#x27;</span>)).<span class="title function_">toBeTruthy</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
          <category> vue </category>
          
          <category> test-utils </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue-test-utils </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo启动部署博客的命令</title>
      <link href="/2019/08/02/hexo%E5%90%AF%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/08/02/hexo%E5%90%AF%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>使用git bash工具</p><h2 id="本地目录"><a href="#本地目录" class="headerlink" title="本地目录"></a>本地目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ e: 00aa/blog</span><br></pre></td></tr></table></figure><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g </span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><h2 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown参考</title>
      <link href="/2019/08/02/markdown%E5%8F%82%E8%80%83/"/>
      <url>/2019/08/02/markdown%E5%8F%82%E8%80%83/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! <code>This</code> is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><span id="more"></span><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><p><img src="/images/github%E6%96%B0%E5%BB%BA%E5%BA%93.png"></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">640px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">body</span> &#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#f8f8f8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p><div class="tip">    在ECMAScript 5的strict模式下，这种情况的`this`已经被规定不会指向全局对象了，而是`undefined`</div><ul><li><a href="https://hexo.io/">Hexo</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
